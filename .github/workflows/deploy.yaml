name: Dockerize and Deploy to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  APP_REPO_NAME: nodejs-todo-app
  APP_NAME: nodetodo
  ECR_REGISTRY: 046402772087.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      # - name: Build Docker images
      #   run: |
      #     docker build -t my-node-app:latest .
      #     docker tag my-node-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-node-app:latest

      - name: Configure AWS CLI
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        shell: bash


      - name: Set AWS Region
        run: |
          aws configure set aws_region ${{ env.AWS_REGION }}


      - name: Create ECR Repo
        run: |
          echo 'Creating ECR Repo for App'
          aws ecr create-repository \
            --repository-name ${{ env.APP_REPO_NAME }} \
            --image-scanning-configuration scanOnPush=false \
            --image-tag-mutability MUTABLE \
            --region ${{ env.AWS_REGION }}
          
      
      - name: Build App Docker Image
        run: | 
          docker build -t "$ECR_REGISTRY/$APP_REPO_NAME:latest" -f .    
      
      
      - name: Push Image to ECR Repo
        run: |
          echo 'Pushing App Image to ECR Repo'
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin "$ECR_REGISTRY"
          docker push "$ECR_REGISTRY/$APP_REPO_NAME:latest"




